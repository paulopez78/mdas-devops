apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/publicEndpoints: '[{"addresses":["10.98.44.49"],"port":5432,"protocol":"TCP","serviceName":"trip-verification-postgres:postgres-internal","allNodes":false}]'
  labels:
    app: postgres
  name: postgres
  namespace: trip-verification-postgres
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        ad.datadoghq.com/postgres.check_names: '["postgres"]'
        ad.datadoghq.com/postgres.init_configs: '[{}]'
        ad.datadoghq.com/postgres.instances: |
          [ {"host":"%%host%%", "port":5432,"username":"datadog","password":"-zX[Vseh&M9?\"7?B"} ]
        ad.datadoghq.com/postgres.logs: |
          [{"source":"postgresql", "service":"trip-verification-postgres", "log_processing_rules":[{ "type":"multi_line", "pattern":"\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])", "name":"new_log_start_with_date" }] }]
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: taF6koJY9DzB
        - name: POSTGRES_DB
          value: TripVerification
        image: postgres:11.1
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 6Gi
          requests:
            cpu: 300m
            memory: 4Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: data
          subPath: postgres
        - mountPath: /dev/shm
          name: dshm
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgres-pvc
      - emptyDir:
          medium: Memory
        name: dshm
  replicas: 1
